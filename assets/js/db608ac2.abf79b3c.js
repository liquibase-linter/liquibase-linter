"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4753],{2198:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rules/object-name","title":"object-name","description":"Why?","source":"@site/docs/rules/object-name.md","sourceDirName":"rules","slug":"/rules/object-name","permalink":"/liquibase-linter/docs/rules/object-name","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"object-name"},"sidebar":"docs","previous":{"title":"no-raw-sql","permalink":"/liquibase-linter/docs/rules/no-raw-sql"},"next":{"title":"object-name-length","permalink":"/liquibase-linter/docs/rules/object-name-length"}}');var r=s(4848),a=s(8453);const i={title:"object-name"},o=void 0,l={},c=[{value:"Why?",id:"why",level:2},{value:"Options",id:"options",level:2},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"why",children:"Why?"}),"\n",(0,r.jsx)(n.p,{children:"You might already have some standards for how things are named in your databases schemas, to ensure consistency. Schema objects are a pain to rename once they're in, so it's good to be able to enforce this standard at the source (assuming you can express your standard as a regex)."}),"\n",(0,r.jsx)(n.p,{children:"This rule will fail if the given regex does not match against the name for any:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Table"}),"\n",(0,r.jsx)(n.li,{children:"Column"}),"\n",(0,r.jsx)(n.li,{children:"View"}),"\n",(0,r.jsx)(n.li,{children:"Primary key"}),"\n",(0,r.jsx)(n.li,{children:"Foreign key constraint"}),"\n",(0,r.jsx)(n.li,{children:"Unique constraint"}),"\n",(0,r.jsx)(n.li,{children:"Index"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pattern"})," - (regex, as string) regular expression that the name of any new schema object should adhere to"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "object-name": {\n      "pattern": "^(?!_)[A-Z_0-9]+(?<!_)$",\n      "errorMessage": "Object name \'%s\' name must be uppercase and use \'_\' separation"\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["(The above example ensures objects are named like ",(0,r.jsx)(n.code,{children:"NAME_OF_THING"}),".)"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);