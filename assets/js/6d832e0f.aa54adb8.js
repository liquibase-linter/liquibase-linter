"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[875],{5855:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"reporting/index","title":"Using Reporters","description":"Liquibase Linter has several types of reporters that you can turn on and configure to suit your needs.","source":"@site/docs/reporting/index.md","sourceDirName":"reporting","slug":"/reporting/","permalink":"/liquibase-linter/docs/reporting/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Using Reporters","slug":"/reporting/"},"sidebar":"docs","previous":{"title":"Implementing a Custom Rule","permalink":"/liquibase-linter/docs/custom-rules"},"next":{"title":"Console","permalink":"/liquibase-linter/docs/reporting/console"}}');var i=r(4848),o=r(8453);const s={title:"Using Reporters",slug:"/reporting/"},l=void 0,a={},c=[{value:"Turning on a reporter",id:"turning-on-a-reporter",level:2},{value:"Options",id:"options",level:2},{value:"Multiple Configs",id:"multiple-configs",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Liquibase Linter has several types of reporters that you can turn on and configure to suit your needs."}),"\n",(0,i.jsx)(n.h2,{id:"turning-on-a-reporter",children:"Turning on a reporter"}),"\n",(0,i.jsxs)(n.p,{children:["By default, only the ",(0,i.jsx)(n.a,{href:"/liquibase-linter/docs/reporting/console",children:(0,i.jsx)(n.code,{children:"console"})})," reporter is enabled."]}),"\n",(0,i.jsx)(n.p,{children:"The simplest way to use a reporter is to simply enable it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "reporting": {\n    "markdown": true\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["By default, the report is written to the ",(0,i.jsx)(n.code,{children:"./target"})," directory. It this example,\nthe file would be written to ",(0,i.jsx)(n.code,{children:"./target/lqlint-report.md"}),". An alternate location\ncan be configured by simply specifying it as such:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "reporting": {\n    "markdown": "custom/path/report.md"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"The value can also be an options object:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "reporting": {\n    "markdown": {\n      "enabled": true,\n      "path": "custom/path/report.md",\n      "filter": ["ERROR", "IGNORED", "PASSED"]\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.p,{children:"All reporters support these standard options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"enabled"})," - (boolean) enable or disable a reporter"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"path"})," - (string) specifies the location where the report will be written"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"filter"})," - (string array) specifies what type of linting results will be included.\nTypically only ",(0,i.jsx)(n.code,{children:"ERROR"})," and ",(0,i.jsx)(n.code,{children:"IGNORED"})," violations are reported.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ERROR"})," (string) rule violations that were not ignored or skipped"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"IGNORED"})," (string) rule violations that were ignored"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PASSED"})," (string) rule evaluations that did not produce a violation"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Individual reporters can also support their own options; you can find these documented with those reporters."}),"\n",(0,i.jsx)(n.h2,{id:"multiple-configs",children:"Multiple Configs"}),"\n",(0,i.jsxs)(n.p,{children:["Though you might not need it often, you can specify multiple configs - with\ndifferent options - for the same reporter. In this way you could produce\nmultiple reports of the same type with different options. For example, you could\nproduce multiple ",(0,i.jsx)(n.code,{children:"markdown"})," reports, each containing different ",(0,i.jsx)(n.code,{children:"filter"})," results."]}),"\n",(0,i.jsx)(n.p,{children:"This is configured by providing an array of reporting config objects rather than just one, as in this example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "reporting": {\n    "markdown": [\n      {\n        "path": "./target/lqlint-full-report.md",\n        "filter": ["ERROR", "IGNORED", "PASSED"]\n      },\n      {\n        "path": "./target/lqlint-errors-report.md",\n        "filter": ["ERROR"]\n      }\n    ]\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(6540);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);