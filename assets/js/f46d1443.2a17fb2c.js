"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[31],{3757:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=t(4848),o=t(8453);const i={title:"has-comment"},r=void 0,c={id:"rules/has-comment",title:"has-comment",description:"Why?",source:"@site/docs/rules/has-comment.md",sourceDirName:"rules",slug:"/rules/has-comment",permalink:"/liquibase-linter/docs/rules/has-comment",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"has-comment"},sidebar:"docs",previous:{title:"foreign-key-name",permalink:"/liquibase-linter/docs/rules/foreign-key-name"},next:{title:"has-context",permalink:"/liquibase-linter/docs/rules/has-context"}},a={},l=[{value:"Why?",id:"why",level:2},{value:"Options",id:"options",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"why",children:"Why?"}),"\n",(0,s.jsx)(n.p,{children:"Comments in changeSets provide a useful record of what the intent of the change was, in natural language. They can also make code reviews easier, by being in with the code rather than in a commit message."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"has-comment"})," rule will fail if any changeSets don't have a ",(0,s.jsx)(n.code,{children:"<comment>"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.p,{children:"No extra options."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);