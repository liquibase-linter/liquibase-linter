(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=u(n),m=r,d=b["".concat(c,".").concat(m)]||b[m]||p[m]||o;return n?a.a.createElement(d,i(i({ref:t},s),{},{components:n})):a.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},97:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(6),o=(n(0),n(112)),c={title:"object-name"},i={unversionedId:"rules/object-name",id:"rules/object-name",isDocsHomePage:!1,title:"object-name",description:"Why?",source:"@site/docs/rules/object-name.md",slug:"/rules/object-name",permalink:"/liquibase-linter/docs/rules/object-name",version:"current",sidebar:"docs",previous:{title:"no-raw-sql",permalink:"/liquibase-linter/docs/rules/no-raw-sql"},next:{title:"object-name-length",permalink:"/liquibase-linter/docs/rules/object-name-length"}},l=[{value:"Why?",id:"why",children:[]},{value:"Options",id:"options",children:[]},{value:"Example Usage",id:"example-usage",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"why"},"Why?"),Object(o.b)("p",null,"You might already have some standards for how things are named in your databases schemas, to ensure consistency. Schema objects are a pain to rename once they're in, so it's good to be able to enforce this standard at the source (assuming you can express your standard as a regex)."),Object(o.b)("p",null,"This rule will fail if the given regex does not match against the name for any:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Table"),Object(o.b)("li",{parentName:"ul"},"Column"),Object(o.b)("li",{parentName:"ul"},"View"),Object(o.b)("li",{parentName:"ul"},"Primary key"),Object(o.b)("li",{parentName:"ul"},"Foreign key constraint"),Object(o.b)("li",{parentName:"ul"},"Unique constraint"),Object(o.b)("li",{parentName:"ul"},"Index")),Object(o.b)("h2",{id:"options"},"Options"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"pattern")," - (regex, as string) regular expression that the name of any new schema object should adhere to")),Object(o.b)("h2",{id:"example-usage"},"Example Usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n    "rules": {\n        "object-name": {\n            "pattern": "^(?!_)[A-Z_0-9]+(?<!_)$",\n            "errorMessage": "Object name \'%s\' name must be uppercase and use \'_\' separation"\n        }\n    }\n}\n')),Object(o.b)("p",null,"(The above example ensures objects are named like ",Object(o.b)("inlineCode",{parentName:"p"},"NAME_OF_THING"),".)"))}u.isMDXComponent=!0}}]);