(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{117:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,f=d["".concat(o,".").concat(b)]||d[b]||p[b]||i;return n?a.a.createElement(f,l(l({ref:t},s),{},{components:n})):a.a.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(6),i=(n(0),n(117)),o={title:"modify-data-enforce-where"},l={unversionedId:"rules/modify-data-enforce-where",id:"rules/modify-data-enforce-where",isDocsHomePage:!1,title:"modify-data-enforce-where",description:"Why?",source:"@site/docs/rules/modify-data-enforce-where.md",slug:"/rules/modify-data-enforce-where",permalink:"/liquibase-linter/docs/rules/modify-data-enforce-where",version:"current",sidebar:"docs",previous:{title:"isolate-ddl-changes",permalink:"/liquibase-linter/docs/rules/isolate-ddl-changes"},next:{title:"modify-data-starts-with-where",permalink:"/liquibase-linter/docs/rules/modify-data-starts-with-where"}},c=[{value:"Why?",id:"why",children:[]},{value:"Options",id:"options",children:[]},{value:"Example Usage",id:"example-usage",children:[]}],s={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"why"},"Why?"),Object(i.b)("p",null,"When updating or deleting data in a table, it's possible to do an unqualified modification; that is, not provided a ",Object(i.b)("inlineCode",{parentName:"p"},"<where>")," condition so that all rows are updated/deleted."),Object(i.b)("p",null,"Whilst this can be a valid usage, it is prone to mistakes, and there might be some tables on which an oversight could be particularly harmful, like those with multi-tenant (or otherwise scoped) data."),Object(i.b)("p",null,"Additionally, even qualified updates on certain tables can be problematic if they are not differentiating on a particular column or columns, so you can get more specific about this by providing a regular expression that any ",Object(i.b)("inlineCode",{parentName:"p"},"<where>")," condition must adhere to."),Object(i.b)("p",null,"This rule will fail if an update or delete change on any of the given tables does not include a ",Object(i.b)("inlineCode",{parentName:"p"},"<where>")," condition, or if a ",Object(i.b)("inlineCode",{parentName:"p"},"<where>")," condition is included but does not match a specified pattern."),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"values")," - (array of regex strings) list of table name patterns that cannot have unqualified modifications"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pattern")," - (regex, as string) optional regular expression that ",Object(i.b)("inlineCode",{parentName:"li"},"<where>")," conditions must adhere to")),Object(i.b)("h2",{id:"example-usage"},"Example Usage"),Object(i.b)("p",null,"A basic usage:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n    "rules": {\n        "modify-data-enforce-where": {\n            "values": ["SETTINGS"],\n            "errorMessage": "Updates and deletes to settings table must have a where condition"\n        }\n    }\n}\n')),Object(i.b)("p",null,"With the addition of a pattern:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n    "rules": {\n        "modify-data-enforce-where": {\n            "values": ["SETTINGS"],\n            "pattern": "^.*GROUP =.*$",\n            "errorMessage": "Updates and deletes to settings table must have a where condition that references group column"\n        }\n    }\n}\n')))}u.isMDXComponent=!0}}]);